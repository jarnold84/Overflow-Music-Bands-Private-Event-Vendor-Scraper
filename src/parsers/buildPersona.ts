// File: src/parsers/buildPersona.ts

import type { Lead, MessagePersona } from '../utils/types';

export function buildMessagePersona(lead: Lead): MessagePersona {
  return {
    leadName: lead.leadName,
    businessName: lead.businessName,
    segmentFocus: lead.segmentFocus,
    eventTypes: lead.eventTypes ?? [],
    styleVibe: lead.styleVibe ?? [],
    clienteleProfile: lead.clienteleProfile,
    services: lead.services ?? [],
    capacity: lead.capacityNotes,
    location: lead.city ?? undefined,
    serviceRadius: lead.serviceRadius,
    values: Array.isArray(lead.values)
      ? lead.values
      : lead.values
      ? [lead.values]
      : [],
    socialProof: Array.isArray(lead.socialProof)
      ? lead.socialProof
      : lead.socialProof
      ? [lead.socialProof]
      : [],
    fnbMinimumUSD: lead.fnbMinimumUSD ?? null,
    revMinimumUSD: lead.revMinimumUSD ?? null,
    bookingLink: lead.bookingLink ?? null,
    people: lead.people ?? [],
    socials: lead.socials ?? {},
    bestHookIdeas: [], // To be generated by GPT later
  };
}

/*
üí° TO DO (Optional Persona Enhancements):
- Use inferred tags or values to generate `bestHookIdeas` via GPT scoring
- Combine city + state + country into a single `location` string
- Add tone/persona styles based on `values` or `socialProof` (e.g., ‚Äúeco-friendly,‚Äù ‚Äúluxury‚Äù)
- Add GPT-generated messaging archetype (e.g., ‚ÄúCommunity builder,‚Äù ‚ÄúHigh-end curator‚Äù)
*/
